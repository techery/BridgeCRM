apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'retrolambda'
apply plugin: 'com.stanfy.android.apt'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://dl.bintray.com/populov/maven" }
    maven { url 'https://github.com/tvbarthel/maven/raw/master/' }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

android {
    archivesBaseName = "BridgeCRM"

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.bridgecrm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    signingConfigs {
        release {
            Properties signinProperties = new Properties()
            def pFile = rootProject.file('signing/signing.properties')
            if (pFile.exists()) {
                signinProperties.load(new FileInputStream(pFile))
                storeFile rootProject.file("signing/" + signinProperties.storeFile)
                storePassword signinProperties.storePassword
                keyAlias signinProperties.keyAlias
                keyPassword signinProperties.keyPassword
            }
        }
        debug {
            // Use same debug certificate within team
            storeFile rootProject.file("debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            versionNameSuffix ' dev'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries = rootProject.ext.preDexLibs // disabled cause of MultiDex
    }

    /** Some duplication dependencies inside â€“ ignoring */
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        ignore 'InvalidPackage' // avoid complains about annotation processor classes
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    // base
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:support-v4:21.+'
    // reactivity
    compile 'io.reactivex:rxandroid:+'
    compile project(':libProjects:rxloader:rxloader')
    compile 'com.stanfy.enroscar:enroscar-async:2.+}'
    compile('com.stanfy.enroscar:enroscar-async-rx:2.+') {
        exclude group: 'com.netflix.rxjava'
    }
    provided 'com.stanfy.enroscar:enroscar-async-compiler:2.+'
    compile 'com.stanfy.enroscar:enroscar-goro:2.0.0@aar'
    compile 'de.halfbit:tinybus:2.+'
    compile 'de.halfbit:tinybus-extensions:2.+'
    compile 'com.parse.bolts:bolts-android:1.1.2' // for Parse
    // di
    compile 'com.google.dagger:dagger:2.+'
    provided 'com.google.dagger:dagger-compiler:2.+'
    provided 'org.glassfish:javax.annotation:10.+'
    // network
    compile 'com.squareup.okhttp:okhttp:2.1.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.1.+'
    compile 'com.google.code.gson:gson:2.3.1'
    // ui
    compile 'com.github.johnkil.android-appmsg:appmsg:1.+'
    compile 'com.balysv.materialmenu:material-menu-toolbar:1+'
    compile('fr.avianey.com.viewpagerindicator:library:2.4.1') {
        exclude group: 'com.google.android'
    }
    compile 'com.android.support:cardview-v7:21.0.+'
    compile 'fr.tvbarthel.lib.blurdialogfragment:lib:0.1.+'
    compile 'com.github.andkulikov:transitions-everywhere:1.+'
    compile 'com.guerwan:transitionbackport:1.+'
    compile 'eu.inmite.android.lib:android-validation-komensky:+'
    compile project(':libProjects:AndroidFloatLabel:FloatLabel')

    // services
    compile 'com.google.android.gms:play-services:6.+'
    // util
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.jakewharton.timber:timber:2.+'
    compile 'com.hannesdorfmann.fragmentargs:annotation:1.+'
    provided 'com.hannesdorfmann.fragmentargs:processor:1.+'
    debugCompile 'com.jakewharton.madge:madge:1.+'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.+'
}

// Play publisher plugin

apply plugin: 'play'

play {
    Properties p = new Properties()
    def pFile = rootProject.file('play/publish.properties')
    if (pFile.exists()) {
        p.load(new FileInputStream(pFile))
        //
        serviceAccountEmail = p.serviceEmail
        pk12File = rootProject.file("play/" + p.keyFile)
    }
}